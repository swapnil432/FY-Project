let SellerOffer;_740‍.x([["sellProperty",()=>sellProperty],["getSellOffer",()=>getSellOffer],["deleteSellOffer",()=>deleteSellOffer]]);_740‍.w("../models/sellerOffer",[["default",["SellerOffer"],function(v){SellerOffer=v}]]);

       const sellProperty = async (req, res) => {
  const propId = req.params.id;
  const { seller_id, buyer_id, current_price } = req.body;
  _740‍.g.console.log("seller id is... ",seller_id);
  
  SellerOffer.findOne({ property_id: propId }, (err, seller) => {
    if (err || !seller) {
      let newUSeller = new SellerOffer();
      newUSeller.seller_id = seller_id;
      newUSeller.buyer_id = buyer_id;
      newUSeller.current_price = current_price;
      newUSeller.property_id = propId;
      newUSeller.save((err, updatedSeller) => {
        if (err) {
          return res.status(400).json({
            error: "Seller offer creation failed",
          });
        }
        return res.status(200).json({
          updatedSeller,
          message: "Seller offer Uploaded",
        });
      });
    }
    seller.seller_id = seller_id;
    seller.buyer_id = buyer_id;
    seller.current_price = current_price;
    seller.property_id = propId;

    seller.save((err, updatedSeller) => {
      if (err) {
        return res.status(400).json({
          error: "Seller offer creation failed",
        });
      }
      return res.status(200).json({
        updatedSeller,
        message: "Seller offer Uploaded",
      });
    });
  });
};

       const getSellOffer = async (req, res) => {
  const buyId = req.params.id;
  SellerOffer.find({ buyer_id: buyId }, (err, swll) => {
    if (err) {
      return res.status(400).json({
        error: "Notification not found",
      });
    }
    return res.status(200).json({
      sell,
    });
  });
};

       const deleteSellOffer = async (req, res) => {
  const propId = req.params.id;
  SellerOffer.deleteMany({ property_id: propId }, (err, sell) => {
    if (err) {
      return res.status(400).json({
        error: "Notification not found",
      });
    }
    return res.status(200).json({
      message: "Notification deleted Successfully ",
    });
  });
};